:PROPERTIES:
:ID:       5164eb69-db1d-4eb1-81d0-d1d75a490ea6
:END:
#+title:       Hyprland
#+author:      Artem Smaznov
#+description: wlroots-based tiling Wayland compositor written in C++
#+startup:     overview
#+property:    header-args :tangle hyprland.conf
#+auto_tangle: t

* Table of Contents :toc:
- [[#dependencies][Dependencies]]
- [[#apps][Apps]]
- [[#theme][Theme]]
- [[#monitors][Monitors]]
- [[#waybar][Waybar]]
- [[#startup][Startup]]
- [[#environment-variables][Environment Variables]]
- [[#general][General]]
- [[#window-rules][Window Rules]]
  - [[#xwayland-windows][XWayland Windows]]
  - [[#floating-windows][Floating Windows]]
  - [[#maximized-windows][Maximized Windows]]
  - [[#idle-inhibit][Idle Inhibit]]
  - [[#apps-1][Apps]]
  - [[#workspaces][Workspaces]]
  - [[#scratchpads][Scratchpads]]
- [[#workspace-rules][Workspace Rules]]
- [[#decoration][Decoration]]
- [[#input][Input]]
- [[#misc][Misc]]
- [[#binds][Binds]]
- [[#animations][Animations]]
- [[#layouts][Layouts]]
  - [[#dwindle][Dwindle]]
  - [[#master][Master]]
- [[#gestures][Gestures]]
- [[#devices][Devices]]
  - [[#mouse][Mouse]]
- [[#keybindings][Keybindings]]
  - [[#hold-leader][HOLD Leader]]
  - [[#system][System]]
  - [[#windows][Windows]]
  - [[#monitors-1][Monitors]]
  - [[#layouts-1][Layouts]]
  - [[#workspaces-1][Workspaces]]
  - [[#special-workspaces][Special Workspaces]]
  - [[#media-keys][Media Keys]]
  - [[#dm-scripts][dm-scripts]]
  - [[#launching-apps][Launching Apps]]
- [[#mouse-bindings][Mouse Bindings]]
- [[#scripts][Scripts]]
  - [[#dmscripts][DMScripts]]
  - [[#toggle-borders][Toggle Borders]]
  - [[#toggle-corners][Toggle Corners]]
  - [[#toggle-gaps][Toggle Gaps]]
  - [[#toggle-layout][Toggle Layout]]
  - [[#toggle-special-workspace][Toggle Special Workspace]]
  - [[#toggle-zen][Toggle Zen]]

* Dependencies
|-----------------+-------------|
| Name            | Description |
|-----------------+-------------|
| hyprland        |             |
| hyprpaper       |             |
| waybar-hyprland |             |
|-----------------+-------------|

#+begin_example shell
sudo pacman -S hyprland hyprpaper
#+end_example

* Apps
#+begin_src conf
$myScript        = $HOME/.local/bin
$myDMScript      = $HOME/.local/bin/dm-scripts
$myHyprConfig    = $HOME/.config/hypr

# cli tools
$myTerm          = alacritty
$myCliFiles      = alacritty -e vifmrun
$myCliMusic      = ncmpcpp
$myCliText       = vim
$myCliSysAudio   = alsamixer
$myCliSysMonitor = btop
$myCliSysTasks   = htop

# core tools
$myWebBrowser    = qutebrowser
$myIncBrowser    = qutebrowser --target private-window
$myTorBrowser    = torbrowser-launcher
$myIde           = emacsclient -c -a 'emacs'
$myFiles         = pcmanfm
$mySteam         = /usr/bin/steam-runtime %U

# extra tools
$myLauncher      = wofi --show drun
$myPassType      = wofi-pass -st
$myPassCopy      = wofi-pass -sc
$myVirtManager   = virt-manager
$myTorrent       = transmission-gtk
$myCalculator    = gnome-calculator
$myAnki          = anki

# graphics tools
$myPhotoLibrary  = digikam
$myImgEditor     = gimp
$myVctEditor     = inkscape
$myVidEditor     = kdenlive

# chat apps
$myWhatsApp      = whatsapp-for-linux
$myDiscord       = discord

# system tools
$mySysPower      = xfce4-power-manager-settings
$mySysNetwork    = nm-connection-editor
$mySysBluetooth  = blueman-manager
#+end_src

* Theme
#+begin_src conf
source=./themes/base16.conf

$gaps = 7
$gaps_double = 14
$borders = 5
$borders_double = 10
$corners = 10
#+end_src

* Monitors
See https://wiki.hyprland.org/Configuring/Monitors/
#+begin_src conf
monitor=HDMI-A-1,preferred,auto,auto
monitor=,highrr,auto,auto
#+end_src

* [[id:8d66f45b-11a8-43fe-b8e7-9ef284aff619][Waybar]]
* Startup
See https://wiki.hyprland.org/Configuring/Keywords/ for more
#+begin_src conf
exec-once = waybar
# exec-once = hyprctl dispatch focusmonitor 1
exec-once = $myScript/auto-start.sh
# exec-once = swayidle
#+end_src

* Environment Variables
Toolkit Backend Variables
#+begin_src conf
env = GDK_BACKEND,wayland,x11     # GTK: Use wayland if available, fall back to x11 if not.
#+end_src

Qt Variables
#+begin_src conf
env = QT_QPA_PLATFORM,wayland;xcb # QT: Use wayland if available, fall back to x11 if not.
env = QT_QPA_PLATFORMTHEME,qt5ct  # Tells QT based applications to pick your theme from qt5ct, use with Kvantum.
#+end_src

XDG Specifications
#+begin_src conf
env = XDG_CURRENT_DESKTOP,Hyprland
env = XDG_SESSION_TYPE,wayland
env = XDG_SESSION_DESKTOP,Hyprland
#+end_src

attempt to fix dunst autostart from systemd
#+begin_src conf
# env = WAYLAND_DISPLAY,wayland-0
#+end_src

Theming Related Variables
#+begin_src conf
# env = GTK_THEME,                  # Set a GTK theme manually, for those who want to avoid appearance tools such as lxappearance or nwg-look
# env = XCURSOR_THEME,              # Set your cursor theme. The theme needs to be installed and readable by your user.
env = XCURSOR_SIZE,24             # Set cursor size. See here for why you might want this variable set.
#+end_src

* General
See https://wiki.hyprland.org/Configuring/Variables/ for more
#+begin_src conf
general {
    gaps_in = $gaps              # gaps between windows
    gaps_out = $gaps_double      # gaps between windows and monitor edges

    border_size = $borders
    col.active_border = rgba($base0Eaa) rgba($base0Dee) 45deg
    col.inactive_border = rgba($base03aa)

    no_cursor_warps = true       # will not warp the cursor in many cases (focusing, keybinds, etc)
    cursor_inactive_timeout = 10 # after how many seconds of cursorâ€™s inactivity to hide it. Set to 0 for never.

    no_focus_fallback = true     # will not fall back to the next available window when moving focus in a direction where no window was found

    resize_on_border = true      # enables resizing windows by clicking and dragging on borders and gaps

    layout = dwindle
}
#+end_src

* Window Rules
See https://wiki.hyprland.org/Configuring/Window-Rules/ for more
** XWayland Windows
#+begin_src conf
windowrulev2 = bordercolor rgba($base0Faa) rgb($base00),xwayland:1
windowrulev2 = bordersize 1,pinned:1
#+end_src

** Floating Windows
#+begin_src conf
#+end_src

** Maximized Windows
#+begin_src conf
windowrulev2 = rounding 0,fullscreen:1
#+end_src

** Idle Inhibit
Games
#+begin_src conf
windowrulev2 = idleinhibit focus,class:^steam_app
windowrulev2 = idleinhibit focus,class:x86_64$
#+end_src

** Apps
*** MPV
#+begin_src conf
$app_filter = ^(mpv)$
#---------------------------------------------------
windowrule = float,$app_filter
#+end_src

Tiled
#+begin_src conf
windowrulev2 = pseudo,class:$app_filter,floating:0
#+end_src

Floating
#+begin_src conf
windowrulev2 = dimaround,class:$app_filter,floating:1
windowrulev2 = keepaspectratio,class:$app_filter,floating:1
windowrulev2 = center,class:$app_filter,floating:1
#+end_src

** Workspaces
*** Workspace 1 - Internet
#+begin_src conf
# windowrule = workspace 1 silent,^(firefox)$
# windowrule = workspace 1 silent,^(Tor Browser)$
# windowrule = workspace 1 silent,^(Chromium)$
# windowrule = workspace 1 silent,^(Google-chrome)$
# windowrule = workspace 1 silent,^(Brave-browser)$
# windowrule = workspace 1 silent,^(vivaldi-stable)$
# windowrule = workspace 1 silent,^(org.qutebrowser.qutebrowser)$
# windowrule = workspace 1 silent,^(nyxt)$
#+end_src

*** Workspace 2 - Gaming
#+begin_src conf
windowrule   = workspace 2 silent,^([Ww]ine)$
windowrule   = workspace 2 silent,^(dolphin-emu)$
windowrule   = workspace 2 silent,^([Ll]utris)$
windowrule   = workspace 2 silent,^(Citra)$
windowrule   = workspace 2 silent,^(SuperTuxKart)$
windowrule   = workspace 2 silent,^([Ss]team)$
windowrule   = workspace 2 silent,^([Bb]attle.net)$
#+end_src

*** Workspace 3 - Coding
#+begin_src conf
windowrule = workspace 3 silent,^([Ee]macs)$
windowrule = workspace 3 silent,^(Geany)$
windowrule = workspace 3 silent,^(Atom)$
windowrule = workspace 3 silent,^(Subl3)$
windowrule = workspace 3 silent,^(code-oss)$
windowrule = workspace 3 silent,^(Oomox)$
windowrule = workspace 3 silent,^(Unity)$
windowrule = workspace 3 silent,^(UnityHub)$
windowrule = workspace 3 silent,^(jetbrains-studio)$
#+end_src

*** Workspace 4 - Computer
#+begin_src conf
windowrule = workspace 4 silent,^(dolphin)$
windowrule = workspace 4 silent,^(ark)$
windowrule = workspace 4 silent,^(Pcmanfm)$
windowrule = workspace 4 silent,^(File-roller)$
windowrule = workspace 4 silent,^(googledocs)$
windowrule = workspace 4 silent,^(keep)$
windowrule = workspace 4 silent,^(calendar)$
#+end_src

*** Workspace 5 - Music
#+begin_src conf
windowrule = workspace 5 silent,^(ncmpcpp)$
windowrule = workspace 5 silent,^(Spotify)$
#+end_src

*** Workspace 6 - Graphics
#+begin_src conf
windowrule = workspace 6 silent,^([Gg]imp)$
windowrule = workspace 6 silent,^(Inkscape)$
windowrule = workspace 6 silent,^(Flowblade)$
windowrule = workspace 6 silent,^(org.kde.digikam)$
windowrule = workspace 6 silent,^(obs)$
windowrule = workspace 6 silent,^(kdenlive)$
#+end_src

*** Workspace 7 - Chat
#+begin_src conf
# windowrule   = workspace 7 silent,^(whatsapp-for-linux)$
# windowrule   = workspace 7 silent,^(Slack)$
# windowrule   = workspace 7 silent,^(discord)$
# windowrule   = workspace 7 silent,^(signal)$
# windowrulev2 = workspace 7 silent,class:^([Ss]team)$,title:^(Friends List)$
#+end_src

*** Workspace 8 - Sandbox
#+begin_src conf
windowrule = workspace 8 silent,^(Virt-manager)$
windowrule = workspace 8 silent,^VirtualBox
windowrule = workspace 8 silent,^(Cypress)$
#+end_src

*** Workspace 9 - Monitor
#+begin_src conf
windowrule = workspace 9 silent,^(btop)$
#+end_src

** Scratchpads
*** Terminal
#+begin_src conf
# $app_filter = ^(sp-term)$
# $workspace = sp-term
# #---------------------------------------------------
# windowrule = unset,$app_filter
# windowrule = workspace special:$workspace silent,$app_filter
# windowrule = float,$app_filter
# windowrule = size 50% 80%,$app_filter
# windowrule = center,$app_filter
#+end_src

*** Files
#+begin_src conf
# $scratchpad = ^(sp-files)$
# #---------------------------------------------------
# windowrule = unset,$scratchpad
# # windowrule = workspace special silent,$scratchpad
# windowrule = float,$scratchpad
# windowrule = size 50% 70%,$scratchpad
# windowrule = center,$scratchpad
#+end_src

*** Torrent
#+begin_src conf
$scratchpad = ^(com.transmissionbt.transmission*)
#---------------------------------------------------
windowrule = unset,$scratchpad
# windowrule = workspace special silent,$scratchpad
windowrule = size 30% 80%,$scratchpad
windowrule = float,$scratchpad
windowrule = center,$scratchpad
#+end_src

*** Anki
#+begin_src conf
$scratchpad = ^(anki)$
#---------------------------------------------------
windowrule = unset,$scratchpad
windowrule = float,$scratchpad
windowrule = size 20% 70%,$scratchpad
windowrule = center,$scratchpad
windowrule = dimaround,$scratchpad
#+end_src

*** VM
#+begin_src conf
$scratchpad = ^(virt-manager)$
#---------------------------------------------------
windowrule = unset,$scratchpad
windowrule = workspace special:vm silent,$scratchpad
windowrule = float,$scratchpad
windowrule = size 20% 50%,$scratchpad
windowrule = move 10% 10%,$scratchpad
#+end_src

*** Htop
#+begin_src conf
$scratchpad = ^(sp-htop)$
#---------------------------------------------------
# windowrule = float,$scratchpad
# windowrule = size 80% 80%,$scratchpad
# windowrule = center,$scratchpad
windowrule = stayfocused,$scratchpad
windowrule = dimaround,$scratchpad
#+end_src

*** Calculator
#+begin_src conf
$scratchpad = ^(org.gnome.Calculator)$
#---------------------------------------------------
windowrule = unset,$scratchpad
# windowrule = workspace special silent,$scratchpad
windowrule = float,$scratchpad
windowrule = size 15% 50%,$scratchpad
windowrule = move 82% 5%,$scratchpad
#+end_src

* TODO Workspace Rules
Workspaces
#+begin_src conf
workspace = 1, persistent:true, monitor:DP-1, default:true
workspace = 2, persistent:true, monitor:DP-1
workspace = 3, persistent:true, monitor:DP-1
workspace = 4, persistent:true, monitor:DP-1
workspace = 5, persistent:true, monitor:DP-2
workspace = 6, persistent:true, monitor:DP-1
workspace = 7, persistent:true, monitor:DP-1
workspace = 8, persistent:true, monitor:DP-1
workspace = 9, persistent:true, monitor:DP-1
#+end_src

Special Workspaces
#+begin_src conf
workspace = special:term       , bordersize:$borders_double , gapsin:50 , gapsout:125
workspace = special:files      , bordersize:$borders_double , gapsin:50 , gapsout:125
workspace = special:music      , bordersize:$borders_double , gapsin:50 , gapsout:125
workspace = special:chats      , bordersize:$borders_double , gapsin:50 , gapsout:125
workspace = special:audio      , bordersize:$borders_double , gapsin:50 , gapsout:125
workspace = special:torrent    , bordersize:$borders_double , gapsin:50 , gapsout:125
workspace = special:anki       , bordersize:$borders_double , gapsin:50 , gapsout:125
workspace = special:vm         , bordersize:$borders_double , gapsin:50 , gapsout:125
workspace = special:calculator , bordersize:$borders_double , gapsin:50 , gapsout:125
workspace = special:htop       , bordersize:$borders_double , gapsin:50 , gapsout:125
workspace = special:btop       , bordersize:$borders_double , gapsin:50 , gapsout:125
#+end_src

Native Scratchpad
- compare with toggle script
#+begin_src conf
# workspace = special:foo, on-created-empty:alacritty -e ncmpcpp
# bind = SUPER CTRL , d , togglespecialworkspace , foo
#+end_src

* Decoration
See https://wiki.hyprland.org/Configuring/Variables/ for more
#+begin_src conf
decoration {
    rounding = $corners

    drop_shadow = yes
    shadow_range = 12
    shadow_render_power = 3
    col.shadow = rgba(1a1a1aee)

    blur {
        enabled = yes
        size = 8
        passes = 3
        new_optimizations = on
        noise = 0.1
    }

    dim_inactive = false
}
#+end_src

* Input
For all categories, see https://wiki.hyprland.org/Configuring/Variables/
#+begin_src conf
input {
    kb_layout = us,ru,jp
    kb_variant =
    kb_model =
    # kb_options = grp:lalt_lshift_toggle
    kb_options =
    kb_rules =

    # Specify if and how cursor movement should affect window focus
    # 0 - Cursor movement will not change focus.
    # 1 - Cursor movement will always change focus to the window under the cursor.
    # 2 - Cursor focus will be detached from keyboard focus. Clicking on a window will move keyboard focus to that window.
    # 3 - Cursor focus will be completely separate from keyboard focus. Clicking on a window will not change keyboard focus.
    #
    follow_mouse = 0

    # 0 - Cursor movement will not change focus.
    # 1 - focus will change to the window under the cursor when changing from tiled-to-floating and vice versa.
    # 2 - focus will also follow mouse on float-to-float switches.
    float_switch_override_focus = 0

    repeat_rate = 25   # The repeat rate for held-down keys, in repeats per second.
    repeat_delay = 300 # Delay before a held-down key is repeated, in milliseconds.

    touchpad {
        natural_scroll = no
    }

    sensitivity = 0    # -1.0 - 1.0, 0 means no modification.
}
#+end_src

* Misc
#+begin_src conf
misc {
    disable_hyprland_logo = false
    disable_autoreload = false

    mouse_move_focuses_monitor = false

    mouse_move_enables_dpms = true     # If DPMS is set to off, wake up the monitors if the mouse moves.
    key_press_enables_dpms = true      # If DPMS is set to off, wake up the monitors if a key is pressed.

    animate_manual_resizes = true       # will animate manual window resizes/moves	bool	false
    animate_mouse_windowdragging = true # will animate windows being dragged by mouse, note that this can cause weird behavior on some curves

    enable_swallow = false              # Enable window swallowing
    focus_on_activate = false           # Whether Hyprland should focus an app that requests to be focused

    # allow_session_lock_restore = true   # will allow you to restart a lockscreen app in case it crashes

    vrr = 2                             # controls the VRR (Adaptive Sync) of your monitors. 0 - off, 1 - on, 2 - fullscreen only
}
#+end_src

* Binds
#+begin_src conf
binds {
    workspace_back_and_forth = true     # an attempt to switch to the currently focused workspace will instead switch to the previous workspace
    allow_workspace_cycles = true       # If enabled, workspaces donâ€™t forget their previous workspace, so cycles can be created by switching to the first workspace in a sequence, then endlessly going to the previous workspace.
    movefocus_cycles_fullscreen = false # If enabled, when on a fullscreen window, movefocus will cycle fullscreen, if not, it will move the focus in a direction.
}
#+end_src

* Animations
Some default animations, see https://wiki.hyprland.org/Configuring/Animations/ for more
#+begin_src conf
animations {
    enabled = yes

    bezier = myBezier, 0.05, 0.9, 0.1, 1.05

    animation = windows, 1, 7, myBezier
    animation = windowsOut, 1, 7, default, popin 80%
    animation = border, 1, 10, default
    animation = borderangle, 1, 8, default
    animation = fade, 1, 7, default
    animation = workspaces, 1, 6, default, fade
    animation = specialWorkspace, 1, 6, myBezier, slidefadevert -10%
}
#+end_src

* Layouts
** Dwindle
See https://wiki.hyprland.org/Configuring/Dwindle-Layout/ for more
#+begin_src conf
dwindle {
    pseudotile = true         # master switch for pseudotiling. Pseudotiled windows retain their floating size when tiled.
    force_split = 2           # 0 - mouse; 1 - left; 2 - right
    preserve_split = true     # if enabled, the split (side/top) will not change regardless of what happens to the container.
    no_gaps_when_only = false # whether to apply gaps when there is only one window on a workspace, aka. smart gaps.
}
#+end_src

** Master
See https://wiki.hyprland.org/Configuring/Master-Layout/ for more
#+begin_src conf
master {
    new_is_master = false
    no_gaps_when_only = false # whether to apply gaps when there is only one window on a workspace, aka. smart gaps.
}
#+end_src

* Gestures
#+begin_src conf
gestures {
    # See https://wiki.hyprland.org/Configuring/Variables/ for more
    workspace_swipe = off
}
#+end_src

* Devices
** Mouse
Example per-device config
See https://wiki.hyprland.org/Configuring/Keywords/#executing for more
#+begin_src conf
# device:logitech-mx-master-3-1 {
#     sensitivity = 0
# }
#+end_src

* Keybindings
Example binds, see https://wiki.hyprland.org/Configuring/Binds/ for more
** HOLD Leader
:PROPERTIES:
:header-args: :tangle no
:END:
#+begin_src conf
bind = SUPER , space , submap , leader
submap = leader
bind = , escape , submap , reset
#+end_src
*** Open
#+begin_src conf
bind = , o , submap , leader-open
submap = leader-open
bind = , escape , submap , reset
#+end_src

**** Chats
#+begin_src conf
bind = , c , togglespecialworkspace , chats
bind = , c , submap                 , reset
#+end_src

*** Leader-end
#+begin_src conf
submap = reset
#+end_src

** System
#+begin_src conf
bind = SUPER CTRL , q     , exit                ,                          # Quit Hyprland
bind = SUPER CTRL , r     , forcerendererreload ,                          # Restart Hyprland
bind = SHIFT      , ALT_L , exec                , $myScript/toggle-lang.sh # Toggle language

bind = SUPER , t , submap , toggle
submap = toggle

bind = , b , exec , $myHyprConfig/toggle-borders.sh $borders            # Toggle Window Borders
bind = , c , exec , $myHyprConfig/toggle-corners.sh $corners            # Toggle Corners
bind = , g , exec , $myHyprConfig/toggle-gaps.sh $gaps                  # Toggle Gaps
bind = , z , exec , $myHyprConfig/toggle-zen.sh $borders $corners $gaps # Toggle Zen Mode

# Reset submap
bind = , escape , submap , reset
bind = , b      , submap , reset
bind = , c      , submap , reset
bind = , g      , submap , reset
bind = , z      , submap , reset

submap = reset
#+end_src

** Windows
States
#+begin_src conf
bind = SUPER       , q   , killactive     ,    # Close focused Window
bind = SUPER       , F11 , fullscreen     , 0  # Toggle Fullscreen
bind = SUPER SHIFT , f   , fullscreen     , 0  # Toggle Fullscreen
bind = SUPER       , m   , fullscreen     , 1  # Toggle Maximize
bind = SUPER       , f   , togglefloating ,    # Toggle Floating
bind = SUPER CTRL  , f   , pin            ,    # Toggle Pinnned
#+end_src

Focus
#+begin_src conf
bind = ALT       , tab , cyclenext ,           # Move focus to next Window
bind = ALT SHIFT , tab , cyclenext , prev      # Move focus to prev Window
bind = SUPER     , h   , movefocus , l         # Move focus to left Window
bind = SUPER     , j   , movefocus , d         # Move focus to below Window
bind = SUPER     , k   , movefocus , u         # Move focus to above Window
bind = SUPER     , l   , movefocus , r         # Move focus to right Window
#+end_src

Swapping
#+begin_src conf
bind = SUPER SHIFT , h , swapwindow , l        # Swap focused Window with left Window
bind = SUPER SHIFT , j , swapwindow , d        # Swap focused Window with below Window
bind = SUPER SHIFT , k , swapwindow , u        # Swap focused Window with above Window
bind = SUPER SHIFT , l , swapwindow , r        # Swap focused Window with right Window
#+end_src

Moving
#+begin_src conf
bind = SUPER ALT , h , movewindow , l          # Move focused Window with left Window
bind = SUPER ALT , j , movewindow , d          # Move focused Window with below Window
bind = SUPER ALT , k , movewindow , u          # Move focused Window with above Window
bind = SUPER ALT , l , movewindow , r          # Move focused Window with right Window
#+end_src

Resizing
#+begin_src conf
bind = SUPER , equal , splitratio , exact 1    # Reset fucused Window size

binde = SUPER CTRL , h , resizeactive , -20 0  # Grow focused Window left
binde = SUPER CTRL , j , resizeactive ,  0 20  # Grow focused Window down
binde = SUPER CTRL , k , resizeactive ,  0 -20 # Grow focused Window up
binde = SUPER CTRL , l , resizeactive , 20 0   # Grow focused Window right
#+end_src

Move Floating Windows
#+begin_src conf
binde = SUPER       , equal , centerwindow ,         # Center floating Window
binde = SUPER SHIFT , h     , moveactive   , -20 0   # Move floating Window left
binde = SUPER SHIFT , j     , moveactive   ,  0 20   # Move floating Window down
binde = SUPER SHIFT , k     , moveactive   ,  0 -20  # Move floating Window up
binde = SUPER SHIFT , l     , moveactive   , 20 0    # Move floating Window right
#+end_src

Masters
#+begin_src conf
#+end_src

** Monitors
Focus
#+begin_src conf
bind = SUPER , F1     , focusmonitor , 0 # Move focus to 1st Monitor
bind = SUPER , F2     , focusmonitor , 1 # Move focus to 2nd Monitor
bind = SUPER , F3     , focusmonitor , 2 # Move focus to 3rd Monitor

bind = SUPER , comma  , focusmonitor , l # Move focus to left Monitor
bind = SUPER , period , focusmonitor , r # Move focus to right Monitor
#+end_src

Moving Windows
#+begin_src conf
bind = SUPER SHIFT , comma  , movewindow , mon:l # Move window to left Monitor
bind = SUPER SHIFT , period , movewindow , mon:r # Move window to right Monitor
#+end_src

Swapping
#+begin_src conf
#+end_src

** Layouts
Dwindle
#+begin_src conf
bind = ALT         , space , exec        , $myHyprConfig/toggle-layout.sh # switch layouts
bind = SUPER SHIFT , p     , pseudo      ,                                # Toggle Pseudo
bind = SUPER SHIFT , m     , togglesplit ,                                # Mirror Layout
#+end_src

** Workspaces
Focus
#+begin_src conf
bind = SUPER , tab , workspace , previous # Toggle Workspace
bind = SUPER , 1   , workspace , 1
bind = SUPER , 2   , workspace , 2
bind = SUPER , 3   , workspace , 3
bind = SUPER , 4   , workspace , 4
bind = SUPER , 5   , workspace , 5
bind = SUPER , 6   , workspace , 6
bind = SUPER , 7   , workspace , 7
bind = SUPER , 8   , workspace , 8
bind = SUPER , 9   , workspace , 9
bind = SUPER , 0   , workspace , 10
#+end_src

Moving Windows
#+begin_src conf
bind = SUPER SHIFT , 1 , movetoworkspacesilent , 1
bind = SUPER SHIFT , 2 , movetoworkspacesilent , 2
bind = SUPER SHIFT , 3 , movetoworkspacesilent , 3
bind = SUPER SHIFT , 4 , movetoworkspacesilent , 4
bind = SUPER SHIFT , 5 , movetoworkspacesilent , 5
bind = SUPER SHIFT , 6 , movetoworkspacesilent , 6
bind = SUPER SHIFT , 7 , movetoworkspacesilent , 7
bind = SUPER SHIFT , 8 , movetoworkspacesilent , 8
bind = SUPER SHIFT , 9 , movetoworkspacesilent , 9
bind = SUPER SHIFT , 0 , movetoworkspacesilent , 10
#+end_src

Moving Windows with switching Workspace
#+begin_src conf
bind = SUPER SHIFT CTRL , 1 , movetoworkspace , 1
bind = SUPER SHIFT CTRL , 2 , movetoworkspace , 2
bind = SUPER SHIFT CTRL , 3 , movetoworkspace , 3
bind = SUPER SHIFT CTRL , 4 , movetoworkspace , 4
bind = SUPER SHIFT CTRL , 5 , movetoworkspace , 5
bind = SUPER SHIFT CTRL , 6 , movetoworkspace , 6
bind = SUPER SHIFT CTRL , 7 , movetoworkspace , 7
bind = SUPER SHIFT CTRL , 8 , movetoworkspace , 8
bind = SUPER SHIFT CTRL , 9 , movetoworkspace , 9
bind = SUPER SHIFT CTRL , 0 , movetoworkspace , 10
#+end_src

** Special Workspaces
Toggle
#+begin_src conf
bind = SUPER ALT , grave , togglespecialworkspace , term
bind = SUPER ALT , 1     , togglespecialworkspace , 1
bind = SUPER ALT , 2     , togglespecialworkspace , 2
bind = SUPER ALT , 3     , togglespecialworkspace , 3
bind = SUPER ALT , 4     , togglespecialworkspace , 4
bind = SUPER ALT , 5     , togglespecialworkspace , 5
bind = SUPER ALT , m     , togglespecialworkspace , music
bind = SUPER ALT , a     , togglespecialworkspace , audio
bind = SUPER ALT , c     , togglespecialworkspace , chats
bind = SUPER ALT , v     , togglespecialworkspace , vm
#+end_src

Moving Windows
#+begin_src conf
bind = SUPER ALT SHIFT , grave , movetoworkspacesilent , term
bind = SUPER ALT SHIFT , 1     , movetoworkspacesilent , special:1
bind = SUPER ALT SHIFT , 2     , movetoworkspacesilent , special:2
bind = SUPER ALT SHIFT , 3     , movetoworkspacesilent , special:3
bind = SUPER ALT SHIFT , 4     , movetoworkspacesilent , special:4
bind = SUPER ALT SHIFT , 5     , movetoworkspacesilent , special:5
bind = SUPER ALT SHIFT , m     , movetoworkspacesilent , special:music
bind = SUPER ALT SHIFT , a     , movetoworkspacesilent , special:audio
bind = SUPER ALT SHIFT , c     , movetoworkspacesilent , special:chats
bind = SUPER ALT SHIFT , v     , movetoworkspacesilent , special:vm
#+end_src

** Media Keys
#+begin_src conf
bindl =      , XF86AudioRaiseVolume , exec , $myScript/set-volume.sh + 2 # Increase System Volume
bindl =      , XF86AudioLowerVolume , exec , $myScript/set-volume.sh - 2 # Decrease System Volume
bindl =      , XF86AudioMute        , exec , $myScript/toggle-mute.sh    # Mute
bindl = CTRL , XF86AudioRaiseVolume , exec , mpc volume +2                            # Increase Player Volume
bindl = CTRL , XF86AudioLowerVolume , exec , mpc volume -2                            # Decrease Player Volume
bindl =      , XF86AudioPrev        , exec , mpc prev                                 # Prev Song
bindl =      , XF86AudioNext        , exec , mpc next                                 # Next Song
bindl =      , XF86AudioPlay        , exec , mpc toggle                               # Play/Pause Music
bindl = CTRL , XF86AudioPlay        , exec , mpc single                               # [s] Single Mode
bindl =      , XF86AudioStop        , exec , mpc stop                                 # Stop Music
bindl = CTRL , XF86AudioStop        , exec , mpc random                               # [z] Shuffle Mode
#+end_src

** dm-scripts
Global
#+begin_src conf
bind = SUPER , d , submap , dm-global
submap = dm-global

bind = SUPER , d         , exec , $myDMScript/dm-master     # DM Master
bind =       , w         , exec , $myDMScript/dm-wallpaper  # DM Wallpaper
bind =       , r         , exec , $myDMScript/dm-record     # DM Record
bind =       , p         , exec , $myDMScript/dm-power      # DM Power
bind =       , t         , exec , $myDMScript/dm-theme      # DM Theme
bind =       , s         , exec , $myDMScript/dm-screenshot # DM Screenshot
bind =       , b         , exec , $myDMScript/dm-bookman    # DM Bookman
bind =       , n         , exec , $myDMScript/dm-notify     # DM Notify
bind =       , backslash , exec , $myDMScript/dm-notify     # DM Notify
bind =       , k         , exec , $myDMScript/dm-keys       # DM Keys

# Reset submap
bind =       , escape    , submap , reset
bind = SUPER , d         , submap , reset
bind =       , w         , submap , reset
bind =       , r         , submap , reset
bind =       , p         , submap , reset
bind =       , t         , submap , reset
bind =       , s         , submap , reset
bind =       , b         , submap , reset
bind =       , n         , submap , reset
bind =       , backslash , submap , reset
bind =       , k         , submap , reset

submap = reset
#+end_src

Power Control
#+begin_src conf
bind = SUPER , z , submap , dm-power
submap = dm-power

bind =       , c , exec , $myDMScript/dm-power controller # Disconnect all controllers
bind =       , l , exec , $myDMScript/dm-power lock       # Lock Screen
bind =       , s , exec , $myDMScript/dm-power suspend    # Suspend System
bind =       , p , exec , $myDMScript/dm-power poweroff   # Shutdown System
bind =       , r , exec , $myDMScript/dm-power reboot     # Reboot System
bind =       , w , exec , $myDMScript/dm-power windows    # Reboot to Windows
bind =       , z , exec , $myDMScript/dm-power suspend    # Suspend System
bind = SUPER , z , exec , $myDMScript/dm-power suspend    # Suspend System

# Reset submap
bind =       , escape , submap , reset
bind =       , c      , submap , reset
bind =       , l      , submap , reset
bind =       , s      , submap , reset
bind =       , p      , submap , reset
bind =       , r      , submap , reset
bind =       , w      , submap , reset
bind =       , z      , submap , reset
bind = SUPER , z      , submap , reset

submap = reset
#+end_src

Screenshot
#+begin_src conf
bind =             , print , exec , $myScript/screenshot.sh monitor # Fullscreen Screenshot
bind = SUPER SHIFT , print , exec , $myScript/screenshot.sh area    # Selection Area Screenshot
bind = ALT         , print , exec , $myScript/screenshot.sh window  # Active Window Screenshot
bind = SUPER       , print , exec , $myScript/screenshot.sh desktop # Full Desktop Screenshot
#+end_src

Notifications
#+begin_src conf
bind = SUPER , backslash , submap , dm-notify
submap = dm-notify

bind =       , backslash , exec , $myDMScript/dm-notify recent  # Show most recent Notification
bind = SUPER , backslash , exec , $myDMScript/dm-notify recent  # Show most recent Notification
bind = SHIFT , backslash , exec , $myDMScript/dm-notify recents # Show few recent Notifications
bind =       , r         , exec , $myDMScript/dm-notify recents # Show few recent Notifications
bind = SHIFT , c         , exec , $myDMScript/dm-notify clear   # Clear all Notifications
bind =       , c         , exec , $myDMScript/dm-notify close   # Clear last Notification
bind =       , backspace , exec , $myDMScript/dm-notify close   # Clear last Notification
bind =       , a         , exec , $myDMScript/dm-notify context # Open last Notification

# Reset submap
bind =       , escape    , submap , reset
bind =       , backspace , submap , reset
bind = SHIFT , c         , submap , reset
bind =       , a         , submap , reset

submap = reset
#+end_src

** Launching Apps
*** SUPER
#+begin_src conf
bind = SUPER       , return , exec , $myTerm          # Launch Terminal
bind = SUPER       , c      , exec , $myIde           # Launch IDE
bind = SUPER SHIFT , e      , exec , $myCliFiles      # Launch File Manager
bind = SUPER       , b      , exec , $myWebBrowser    # Launch Web Browser
bind = SUPER       , i      , exec , $myIncBrowser    # Launch Web Browser in Incognito Mode
bind = SUPER       , r      , exec , $myLauncher      # Launch Launcher

bind = SUPER    , grave  , exec , $myHyprConfig/toggle-sp.sh "term"   "sp-term"   "alacritty --class sp-term"
bind = SUPER    , e      , exec , $myHyprConfig/toggle-sp.sh "files"  "sp-files"  "alacritty --class sp-files -e vifm"
#+end_src

*** TODO SUPER Scratchpads
#+begin_src conf
bind = SUPER , s , submap , scratchpad
submap = scratchpad
#                                            | special workspace | class                             | command
bind = , a , exec , $myHyprConfig/toggle-sp.sh "anki"              "anki"                              "anki"
bind = , c , exec , $myHyprConfig/toggle-sp.sh "calculator"        "org.gnome.Calculator"              "gnome-calculator"
bind = , d , exec , $myHyprConfig/toggle-sp.sh "chats"             "discord"                           $myDiscord
bind = , m , exec , $myHyprConfig/toggle-sp.sh "music"             "sp-music"                          "alacritty --class sp-music -e ncmpcpp"
bind = , m , exec , $myHyprConfig/toggle-sp.sh "music"             "sp-clock"                          "alacritty --class sp-clock -e tty-clock -ct -C 3"
bind = , m , exec , $myHyprConfig/toggle-sp.sh "music"             "sp-visualizer"                     "alacritty --class sp-visualizer -e cava"
bind = , t , exec , $myHyprConfig/toggle-sp.sh "torrent"           "com.transmissionbt.transmission"   "transmission-gtk"
bind = , v , exec , $myHyprConfig/toggle-sp.sh "vm"                "virt-manager"                      "virt-manager"
bind = , w , exec , $myHyprConfig/toggle-sp.sh "chats"             "whatsapp-for-linux"                "whatsapp-for-linux"

# Reset submap
bind =       , escape    , submap , reset
bind =       , a         , submap , reset
bind =       , c         , submap , reset
bind =       , d         , submap , reset
bind =       , m         , submap , reset
bind =       , t         , submap , reset
bind =       , v         , submap , reset
bind =       , w         , submap , reset

submap = reset
#+end_src

*** SUPER Open
#+begin_src conf
bind = SUPER , o , submap , app-primary
submap = app-primary

#                                            | special workspace | class                             | command
bind = , c , togglespecialworkspace , chats
bind = , d , exec , $myHyprConfig/toggle-sp.sh "chats"             "discord"                           $myDiscord
bind = , m , exec , $myHyprConfig/toggle-sp.sh "music"             "sp-music"                          "alacritty --class sp-music -e ncmpcpp"
bind = , m , exec , $myHyprConfig/toggle-sp.sh "music"             "sp-clock"                          "alacritty --class sp-clock -e tty-clock -ct -C 3"
bind = , m , exec , $myHyprConfig/toggle-sp.sh "music"             "sp-visualizer"                     "alacritty --class sp-visualizer -e cava"
bind = , s , exec , $mySteam
bind = , i , exec , vimiv $XDG_PICTURES_DIR
bind = , t , exec , $myTorBrowser
bind = , w , exec , $myHyprConfig/toggle-sp.sh "chats"             "whatsapp-for-linux"                "whatsapp-for-linux"

# Reset submap
bind = , escape , submap , reset
bind = , c      , submap , reset
bind = , d      , submap , reset
bind = , m      , submap , reset
bind = , s      , submap , reset
bind = , i      , submap , reset
bind = , t      , submap , reset
bind = , v      , submap , reset
bind = , w      , submap , reset

submap = reset
#+end_src

*** CTRL ALT Open
#+begin_src conf
bind = CTRL ALT , o , submap , app-secondary
submap = app-secondary

bind = , e , exec , $myFiles        #  Launch GUI File Manager
bind = , p , exec , $myPhotoLibrary #  Launch Photo Librar
bind = , g , exec , $myImgEditor    #  Launch Image Editor
bind = , r , exec , $myVctEditor    #  Launch Vector Editor
bind = , v , exec , $myVidEditor    #  Launch Video Editor

# Reset submap
bind = , escape , submap , reset
bind = , e      , submap , reset
bind = , p      , submap , reset
bind = , g      , submap , reset
bind = , r      , submap , reset
bind = , v      , submap , reset

submap = reset
#+end_src

*** TODO CTRL ALT
#+begin_src conf
bind = CTRL ALT , delete , exec                   , $myHyprConfig/toggle-sp.sh "htop"  "sp-htop"  "alacritty --class sp-htop -e htop"
bind = CTRL ALT , end    , exec                   , $myHyprConfig/toggle-sp.sh "btop"  "sp-btop"  "alacritty --class sp-btop -e btop"
bind = CTRL ALT , t      , exec                   , $myTerm

bind = CTRL ALT , a      , togglespecialworkspace , audio
bind = CTRL ALT , a      , exec                   , [workspace special:audio] pavucontrol
bind = CTRL ALT , a      , exec                   , [workspace special:audio] qpwgraph
# bind = CTRL ALT , v      , exec                   , $myHyprConfig/toggle-sp.sh "volume" "pavucontrol" "pavucontrol"
# bind = CTRL ALT , v      , exec                   , $myHyprConfig/toggle-sp.sh "volume" "pavucontrol" "pavucontrol & qpwgraph"
#+end_src

*** SUPER Pass
#+begin_src conf
bind = SUPER , p , submap , pass
submap = pass

bind = , p , exec , $myPassType     # Autofill Password
bind = , c , exec , $myPassCopy     # Copy Password

# Reset submap
bind = , escape , submap , reset
bind = , p      , submap , reset
bind = , c      , submap , reset

submap = reset
#+end_src

* Mouse Bindings
#+begin_src conf
# Scroll through existing workspaces with mainMod + scroll
# bind = SUPER , mouse_down , workspace , e+1
# bind = SUPER , mouse_up   , workspace , e-1

# Move/resize windows with mainMod + LMB/RMB and dragging
bindm = SUPER , mouse:272 , movewindow
bindm = SUPER , mouse:273 , resizewindow
#+end_src

* [[id:d4c60fae-8667-4066-902f-692a61572338][Scripts]]
** [[id:c9d06930-ec33-4afc-b320-3942fa73e592][DMScripts]]
** Toggle Borders
#+begin_src shell :shebang #!/usr/bin/env bash :tangle toggle-borders.sh
default_value=$1

option="general:border_size"
type="int"

current_value=$(hyprctl getoption "$option" | grep "$type" | awk '{print $2}' | tr -d '"')
if [ $current_value = 0 ]; then
    value=$default_value
else
    value=0
fi

hyprctl keyword "$option" $value
#+end_src

** Toggle Corners
#+begin_src shell :shebang #!/usr/bin/env bash :tangle toggle-corners.sh
default_value=$1

option="decoration:rounding"
type="int"

current_value=$(hyprctl getoption "$option" | grep "$type" | awk '{print $2}' | tr -d '"')
if [ $current_value = 0 ]; then
    value=$default_value
else
    value=0
fi

hyprctl keyword "$option" $value
#+end_src

** Toggle Gaps
#+begin_src shell :shebang #!/usr/bin/env bash :tangle toggle-gaps.sh
default_value=$1

option="general:gaps_in"
option2="general:gaps_out"
type="int"


current_value=$(hyprctl getoption "$option" | grep "$type" | awk '{print $2}' | tr -d '"')
if [ $current_value = 0 ]; then
    value=$default_value
else
    value=0
fi

hyprctl keyword "$option" $value
hyprctl keyword "$option2" $((value*=2))
#+end_src

** Toggle Layout
#+begin_src shell :shebang #!/usr/bin/env bash :tangle toggle-layout.sh
layout="$1"

if [ ! "$layout" ]; then
    current_layout=$(hyprctl getoption general:layout | grep str | awk '{print $2}' | tr -d '"')
    if [ "$current_layout" = "dwindle" ]; then
        layout="master"
    else
        layout="dwindle"
    fi
fi

hyprctl keyword general:layout "$layout"
#+end_src

** TODO Toggle Special Workspace
- [ ] multi-spawn

#+begin_src shell :shebang #!/usr/bin/env bash :tangle toggle-sp.sh
workspace_name="$1"
app_class="$2"
app_command="$3"

workspace_is_spawed=$(hyprctl -j clients | jq -c ".[] | select(.class | contains(\"$app_class\"))")
workspace_is_hidden=$(hyprctl -j workspaces | jq -c ".[] | select(.name == \"special:$workspace_name\")")

# spawn app on the given special workspace
if [[ ! $workspace_is_spawed ]]; then
    hyprctl dispatch exec \[workspace special:"$workspace_name"\] "$app_command"
    exit 0
fi

# rip the app back into special workspace if it is empty
if [[ ! $workspace_is_hidden ]]; then
    hyprctl dispatch movetoworkspacesilent special:"$workspace_name","$app_class"
fi

# show the special workspace
hyprctl dispatch togglespecialworkspace "$workspace_name"
#+end_src

** Toggle Zen
#+begin_src shell :shebang #!/usr/bin/env bash :tangle toggle-zen.sh
default_borders="$1"
default_corners="$2"
default_gaps="$3"

borders=$(hyprctl getoption general:border_size | grep int | awk '{print $2}' | tr -d '"')
corners=$(hyprctl getoption decoration:rounding | grep int | awk '{print $2}' | tr -d '"')
gaps=$(hyprctl getoption general:gaps_in | grep int | awk '{print $2}' | tr -d '"')

if [[ $borders = 0 && $corners = 0 && $gaps = 0 ]]; then
    hyprctl keyword general:border_size $default_borders
    hyprctl keyword decoration:rounding $default_corners
    hyprctl keyword general:gaps_in $default_gaps
    hyprctl keyword general:gaps_out $((default_gaps *= 2))
else
    hyprctl keyword general:border_size 0
    hyprctl keyword decoration:rounding 0
    hyprctl keyword general:gaps_in 0
    hyprctl keyword general:gaps_out 0
fi
#+end_src

